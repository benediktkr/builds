def owntone_main_branch = "master"
def clean_ws_after_build = false

pipeline {
    agent any
    parameters {
        booleanParam(name: "rebase_filescans", defaultValue: false, description: "rebase branch for owntone-server#1179 from github:whatdoineed2do/forked-daapd")
        booleanParam(name: "dark_reader", defaultValue: true, description: "experimental work in progress, add the dark-reader generated css to the build")
        booleanParam(name: "build_web", defaultValue: true, description: "build the web ui, override the websocket url")

    }
    options {
        timestamps()
        ansiColor("xterm")
        disableConcurrentBuilds()
        checkoutToSubdirectory 'builds'
        buildDiscarder(
            logRotator(
                // daysToKeepStr: '15',
                // artifactDaysToKeepStr: '15',
                numToKeepStr:'30',
                artifactNumToKeepStr: '1'
            )
        )

    }
    stages {
        stage('clean') {
            when {
                expression { clean_ws_after_build == false }
            }
            steps {
                cleanWs()
            }
        }
        stage('checkout') {
            steps {
                script {
                    // can also use env.JOB_NAME
                    sh "ln -s builds/owntone/builder builder"
                    sh "ln -s builds/owntone/dark-reader dark-reader"
                    sh "ln -s builds/owntone/docker docker"

                    // clone the owntone repos
                    def mirrors = "https://git.sudo.is/mirrors"
                    dir('owntone-server') {
                        git url: "${mirrors}/owntone-server.git", branch: owntone_main_branch
                    }
                    dir('owntone-apt') {
                        git url: "${mirrors}/owntone-apt.git", branch: owntone_main_branch
                    }

                    // add whatdoineed2d's fork and rebase their file-scan-dir branch if rebase_filescans is selected
                    if (params.rebase_filescans) {
                        dir('owntone-server') {
                            sh "git remote add whatdoineed2d https://github.com/whatdoineed2do/forked-daapd"
                            sh "git fetch whatdoineed2d file-scan-dir-path"
                            sh "git branch"
                        }
                    }
                }
            }
        }
        stage('build htdocs') {
            when {
                expression {
                    params.build_web == true
                }
            }
            steps {
                script {
                    sh "builder/docker-run-build-web-src.sh"
                    dir ('dist/htdocs') {
                        sh "zip -r ../htdocs.zip ."
                    }
                }
            }
        }
    }
    post {
        cleanup {
            script {
                if (clean_ws_after_build == true) {
                    cleanWs(deleteDirs: true, disableDeferredWipeout: true, notFailBuild: true)
                }
            }
        }
    }
}
